//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Zbu.ModelsBuilder v2.1.5.54
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Zbu.ModelsBuilder;
using Zbu.ModelsBuilder.Umbraco;

namespace Umbraco.Extensions.Models
{
    using System.Web.Mvc;

    /// <summary>NewsDetached</summary>
	[PublishedContentModel("Newsdetached")]
	public partial class Newsdetached : Detached
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Newsdetached";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Newsdetached(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
            return UmbracoContext.Current.Facade.ContentCache.GetContentType(ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Newsdetached, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		///Text
		///</summary>
		[ImplementPropertyType("bodyText")]
		public IHtmlString BodyText
		{
			////get { return this.GetPropertyValue<IHtmlString>("bodyText"); }
		    get
		    {
		        return new MvcHtmlString(this.GetPropertyValue("bodyText").ToString());
		    }
		}

		///<summary>
		///Subheader
		///</summary>
		[ImplementPropertyType("subheader")]
		public string Subheader
		{
			get { return this.GetPropertyValue<string>("subheader"); }
		}

        [ImplementPropertyType("image")]
        public int Image
        {
            get { return this.GetPropertyValue<int>("image"); }
        }
	}
}
